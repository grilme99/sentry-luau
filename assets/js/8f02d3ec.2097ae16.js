"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[344],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>g});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(t),m=r,g=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return t?a.createElement(g,o(o({ref:n},u),{},{components:t})):a.createElement(g,o({ref:n},u))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7448:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const i={sidebar_position:1},o="Default Integrations",l={unversionedId:"configuration/integrations/default",id:"configuration/integrations/default",title:"Default Integrations",description:"The below system integrations are part of the standard library or the interpreter itself and are enabled by default. To",source:"@site/docs/configuration/integrations/default.md",sourceDirName:"configuration/integrations",slug:"/configuration/integrations/default",permalink:"/sentry-lua/docs/configuration/integrations/default",draft:!1,editUrl:"https://github.com/Neura-Studios/sentry-lua/edit/main/docs/configuration/integrations/default.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"defaultSidebar",previous:{title:"Integrations",permalink:"/sentry-lua/docs/configuration/integrations/"},next:{title:"Custom Integrations",permalink:"/sentry-lua/docs/configuration/integrations/custom"}},s={},p=[{value:"What&#39;s Enabled by Default",id:"whats-enabled-by-default",level:2},{value:"InboundFilters",id:"inboundfilters",level:3},{value:"GlobalHandlers",id:"globalhandlers",level:3},{value:"InApp",id:"inapp",level:3},{value:"Dedupe",id:"dedupe",level:3},{value:"Modifying System Integrations",id:"modifying-system-integrations",level:2},{value:"Removing an Integration",id:"removing-an-integration",level:3}],u={toc:p},d="wrapper";function c(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"default-integrations"},"Default Integrations"),(0,r.kt)("p",null,"The below system integrations are part of the standard library or the interpreter itself and are enabled by default. To\nunderstand what they do and how to disable them if they cause issues, read on."),(0,r.kt)("h2",{id:"whats-enabled-by-default"},"What's Enabled by Default"),(0,r.kt)("h3",{id:"inboundfilters"},"InboundFilters"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Import name: ",(0,r.kt)("inlineCode",{parentName:"em"},"Sentry.Integrations.InboundFilters"))),(0,r.kt)("p",null,"This integration allows you to ignore specific errors based on the type, message, or URLs in a given exception."),(0,r.kt)("p",null,"To configure this integration, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"ignoreErrors"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ignoreTransactions"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"denyUrls"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"allowUrls")," SDK options\ndirectly. Keep in mind that ",(0,r.kt)("inlineCode",{parentName:"p"},"denyURLs")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"allowURLs")," only work for captured exceptions, not raw message events."),(0,r.kt)("h3",{id:"globalhandlers"},"GlobalHandlers"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Import name: ",(0,r.kt)("inlineCode",{parentName:"em"},"Sentry.Integrations.GlobalHandlers"))),(0,r.kt)("p",null,"This integration attaches global handlers to capture uncaught exceptions and unhandled rejections."),(0,r.kt)("p",null,"Available options:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"{\n    onerror = boolean\n    onunhandledrejection = boolean\n}\n")),(0,r.kt)("h3",{id:"inapp"},"InApp"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Import name: ",(0,r.kt)("inlineCode",{parentName:"em"},"Sentry.Integrations.InApp"))),(0,r.kt)("p",null,"This integration marks stack frames from project dependencies as ",(0,r.kt)("inlineCode",{parentName:"p"},"in_app = false"),", which allows Sentry to display\nstacktraces in a more useful way. By default, any frames whose lowercase ",(0,r.kt)("inlineCode",{parentName:"p"},"filename")," starts with:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"replicatedstorage.packages")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"replicatedfirst.packages")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"packages/")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dependencies/")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"deps/"))),(0,r.kt)("p",null,"Will be marked as not ",(0,r.kt)("inlineCode",{parentName:"p"},"in_app"),". The default configuration supports projects all projects, regardless of if they use\nstacktraces or not."),(0,r.kt)("h3",{id:"dedupe"},"Dedupe"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Import name: ",(0,r.kt)("inlineCode",{parentName:"em"},"Sentry.Integrations.Dedupe"))),(0,r.kt)("p",null,"This integration is enabled by default for Roblox, but only deduplicates certain events. It can be helpful if you're\nreceiving many duplicate errors. Note, that Sentry only compares stack traces and fingerprints"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local Sentry = require(Path.To.Sentry)\nlocal DedupeIntegration = Sentry.Integrations.Dedupe\n\nSentry.init({\n    dsn = "__DSN__",\n    integrations = {DedupeIntegration.new()}\n})\n')),(0,r.kt)("h2",{id:"modifying-system-integrations"},"Modifying System Integrations"),(0,r.kt)("p",null,"To disable system integrations, set ",(0,r.kt)("inlineCode",{parentName:"p"},"defaultIntegrations = false")," when calling ",(0,r.kt)("inlineCode",{parentName:"p"},"init()"),"."),(0,r.kt)("p",null,"To override their settings, provide a new instance with your config to the ",(0,r.kt)("inlineCode",{parentName:"p"},"integrations")," option. For example, to turn\noff Roblox capturing global errors:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'Sentry.init({\n    dsn = "__DSN__",\n    \n    integrations = {\n        Sentry.Integrations.GlobalHandlers.new({\n            onerror = false,\n            onunhandledrejection = false,\n        }),\n    },\n})\n')),(0,r.kt)("h3",{id:"removing-an-integration"},"Removing an Integration"),(0,r.kt)("p",null,"This example removes the default-enabled integration for deduplicating events:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local LuauPolyfill = require(Path.To.LuauPolyfill)\nlocal Array = LuauPolyfill.Array\n\nSentry.init({\n    -- ...\n    integrations = function(integrations)\n        -- integrations will be all default integrations\n        return Array.filter(integrations, function(integration)\n            return integration.name ~= "Dedupe"\n        end)\n    end,\n})\n')))}c.isMDXComponent=!0}}]);