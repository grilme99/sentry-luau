"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[642],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),l=u(r),d=o,h=l["".concat(c,".").concat(d)]||l[d]||m[d]||a;return r?n.createElement(h,s(s({ref:t},p),{},{components:r})):n.createElement(h,s({ref:t},p))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[l]="string"==typeof e?e:o,s[1]=i;for(var u=2;u<a;u++)s[u]=r[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8521:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:5},s="Source Maps",i={unversionedId:"sourcemaps/sourcemaps",id:"sourcemaps/sourcemaps",title:"Source Maps",description:"By default, the errors Sentry receives from Roblox will use the Instance path of scripts. For example:",source:"@site/docs/sourcemaps/sourcemaps.md",sourceDirName:"sourcemaps",slug:"/sourcemaps/",permalink:"/sentry-lua/docs/sourcemaps/",draft:!1,editUrl:"https://github.com/Neura-Studios/sentry-lua/edit/main/docs/sourcemaps/sourcemaps.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"defaultSidebar",previous:{title:"Distributed Tracing",permalink:"/sentry-lua/docs/usage/distributed-tracing"},next:{title:"Troubleshooting Source Maps",permalink:"/sentry-lua/docs/sourcemaps/troubleshooting"}},c={},u=[{value:"Sourcemap Setup",id:"sourcemap-setup",level:2},{value:"Configuration",id:"configuration",level:2}],p={toc:u},l="wrapper";function m(e){let{components:t,...a}=e;return(0,o.kt)(l,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"source-maps"},"Source Maps"),(0,o.kt)("p",null,"By default, the errors Sentry receives from Roblox will use the Instance path of scripts. For example:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Datamodel Stacktraces Example",src:r(8222).Z,width:"891",height:"191"})),(0,o.kt)("p",null,"This works fine, but prevents you from accessing several useful Sentry features (such as ",(0,o.kt)("a",{parentName:"p",href:"https://docs.sentry.io/product/integrations/source-code-mgmt/github/#stack-trace-linking"},"GitHub Stacktrace Linking")," and ",(0,o.kt)("a",{parentName:"p",href:"https://docs.sentry.io/product/integrations/source-code-mgmt/github/#code-owners"},"GitHub Code Owners"),"). Additionally, Instance paths are not the easiest to parse\nwhen debugging issues in production."),(0,o.kt)("p",null,"The Roblox SDK supports using ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/rojo-rbx/rojo/pull/530"},"Rojo sourcemaps")," to map Instance paths back to\ntheir original path on the file system. This works for both full-managed and partially-managed Rojo projects, as long as\nthe scripts in your stacktrace are included in the sourcemap. If an Instance path cannot be resolved from the sourcemap,\nthe SDK will fall back to the original Instance path and output a warning (in debug mode)."),(0,o.kt)("h2",{id:"sourcemap-setup"},"Sourcemap Setup"),(0,o.kt)("p",null,"Sourcemaps must be manually built with the Rojo CLI, and then included in your relevant ",(0,o.kt)("inlineCode",{parentName:"p"},"*.project.json")," file.\nTo generate a sourcemap file, run the following command (replacing ",(0,o.kt)("inlineCode",{parentName:"p"},"default.project.json")," as required):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"rojo sourcemap default.project.json --output sourcemap.json\n")),(0,o.kt)("p",null,"Once you've built a sourcemap, you should include it in your Rojo project. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "project-name",\n    "tree": {\n        "$className": "DataModel",\n        "ReplicatedStorage": {\n            "Sourcemap": {\n                "$path": "sourcemap.json"\n            }\n        },\n    }\n}\n')),(0,o.kt)("p",null,"Note that there are a few gotchas with this approach, so please refer to the\n",(0,o.kt)("a",{parentName:"p",href:"/docs/sourcemaps/troubleshooting"},"Troubleshooting Guide")," if you run into any problems."),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"Once you have a sourcemap included in your project, you need to add it to the Sentry configuration. Rojo converts ",(0,o.kt)("inlineCode",{parentName:"p"},"json"),"\nfiles to standard tables in a ",(0,o.kt)("inlineCode",{parentName:"p"},"ModuleScript"),", so you can import your sourcemap like you would any other module."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'local Sourcemap = require(Path.To.Sourcemap)\n\nSentry.init({\n    dsn = "__DSN__",\n\n    -- Depending on your Luau configuration, your imported Sourcemap file may\n    -- not be given the correct type statically. Unfortunately, the only way\n    -- to get around this is casting to `any`.\n    projectSourcemap = Sourcemap :: any,\n})\n')),(0,o.kt)("p",null,"Once configured, your errors should start sending with filesystem paths:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Path Stacktraces Example",src:r(905).Z,width:"938",height:"225"})))}m.isMDXComponent=!0},8222:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/datamodel-stacktraces-852d539c00d314581626f9579394b975.png"},905:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/path-stacktraces-94c9b1ab7935c9e62e8ca931b8b3bc09.png"}}]);