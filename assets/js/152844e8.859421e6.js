"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[738],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),g=a,f=u["".concat(s,".").concat(g)]||u[g]||d[g]||o;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=g;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9346:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1},l="Set the Level",i={unversionedId:"usage/set-level",id:"usage/set-level",title:"Set the Level",description:"The level - similar to logging levels - is generally added by default based on the integration. You can also override it",source:"@site/docs/usage/set-level.md",sourceDirName:"usage",slug:"/usage/set-level",permalink:"/sentry-lua/docs/usage/set-level",draft:!1,editUrl:"https://github.com/Neura-Studios/sentry-lua/edit/main/docs/usage/set-level.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"defaultSidebar",previous:{title:"Usage",permalink:"/sentry-lua/docs/usage/"},next:{title:"SDK Fingerprinting",permalink:"/sentry-lua/docs/usage/sdk-fingerprinting"}},s={},p=[],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"set-the-level"},"Set the Level"),(0,a.kt)("p",null,"The level - similar to logging levels - is generally added by default based on the integration. You can also override it\nwithin an event."),(0,a.kt)("p",null,"To set the level out of scope, you can call ",(0,a.kt)("inlineCode",{parentName:"p"},"captureMessage()")," per event:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'Sentry.captureMessage("this is a debug message", "debug")\n')),(0,a.kt)("p",null,"Available levels are ",(0,a.kt)("inlineCode",{parentName:"p"},'"fatal"'),", ",(0,a.kt)("inlineCode",{parentName:"p"},'"error"'),", ",(0,a.kt)("inlineCode",{parentName:"p"},'"warning"'),", ",(0,a.kt)("inlineCode",{parentName:"p"},'"log"'),", ",(0,a.kt)("inlineCode",{parentName:"p"},'"info"'),", and ",(0,a.kt)("inlineCode",{parentName:"p"},'"debug"')),(0,a.kt)("p",null,"To set the level within scope, you can call ",(0,a.kt)("inlineCode",{parentName:"p"},"setLevel()"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'Sentry.configureScope(function(scope)\n    scope:setLevel("warning")\nend)\n')),(0,a.kt)("p",null,"or per event:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'Sentry.withScope(function(scope)\n    scope:setLevel("info")\n\n    -- The exception has the event level set by the scope (info).\n    Sentry.captureException(Error.new("custom error"))\nend)\n\n-- Outside of withScope, the Event level will have their previous value restored.\n-- The exception has the event level set (error).\nSentry.captureException(Error.new("custom error 2"))\n')))}d.isMDXComponent=!0}}]);